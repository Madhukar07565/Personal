<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ [y] hybris Platform ~ ~ Copyright (c) 2000-2016 SAP SE ~ All rights 
	reserved. ~ ~ This software is the confidential and proprietary information 
	of SAP ~ Hybris ("Confidential Information"). You shall not disclose such 
	~ Confidential Information and shall use it only in accordance with the ~ 
	terms of the license agreement you entered into with SAP Hybris. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">



	<!-- Hot Folder Configuration for CNK -->
	<import
		resource="classpath:/commonproductcore/integration/product/flight/hot-folder-travelogix-flight-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/acco/hot-folder-travelogix-acco-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/activity/hot-folder-travelogix-activity-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/airroute/hot-folder-travelogix-air-route-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/vehicle/hot-folder-travelogix-vehicle-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/cruise/hot-folder-travelogix-cruise-destination-spring.xml" />
	<import 
		resource="classpath:/commonproductcore/integration/product/combination/hot-folder-travelogix-combination-spring.xml"/>	

	<!-- interceptor to generate uid for AbstractTravelogixGenericItem -->
	<import
		resource="classpath:/commonproductcore/integration/product/cruise/hot-folder-travelogix-cruise-brand-master-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/cruise/hot-folder-travelogix-cruise-company-master-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/cruise/hot-folder-travelogix-ship-master-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/cruise/hot-folder-travelogix-cruise-routing-master-spring.xml" />
	<import
		resource="classpath:/commonproductcore/integration/product/holiday/hot-folder-travelogix-products-holiday-spring.xml" />
<!-- 	<import
		resource="classpath:/commonproductcore/integration/product/holiday/hot-folder-travelogix-flavor-holiday-spring.xml" /> -->
    <import
	    resource="classpath:/commonproductcore/integration/product/cruise/hot-folder-cruisepackage-spring.xml" />		
	<import
		resource="classpath:/commonproductcore/integration/product/cruise/hot-folder-cruiseport-spring.xml" />
	<import 
	    resource="classpath:/commonproductcore/integration/product/activity/hot-folder-travelogix-activityproductsubtype-spring.xml" />

    <import
		resource="classpath:/commonproductcore/integration/product/activity/hot-folder-travelogix-activitycomboproduct-spring.xml" />		


	<!-- interceptor to generate uid for AbstractTravelogixGenericItem -->

	<bean id="commonProductSystem"
		class="com.cnk.travelogix.product.common.core.setup.CommonProductSystem"
		parent="abstractCoreSystemSetup" />

	<bean id="deactivationConfigValidateInterceptor"
		class="com.cnk.travelogix.product.common.core.interceptors.DeactivationConfigValidateInterceptor">
	</bean>

	<bean id="deactivationConfigInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"
		scope="tenant">
		<property name="interceptor" ref="deactivationConfigValidateInterceptor" />
		<property name="typeCode" value="DeactivationConfig" />
	</bean>

	<bean id="shoppingInfoPrepareInterceptor"
		class="com.cnk.travelogix.product.common.core.interceptors.ShoppingInfoPrepareInterceptor" autowire="byName">
		<property name="keyGenerator" ref="shoppingInfoGenerator" />
	</bean>

	<bean id="shoppingInfoPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"
		scope="tenant">
		<property name="interceptor" ref="shoppingInfoPrepareInterceptor" />
		<property name="typeCode" value="ShoppingInfo" />
	</bean>

	<bean id="shoppingInfoGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		 scope="tenant">
		<property name="key" value="shoppinginfo_code" />
		<property name="digits" value="5" />
		<property name="start" value="10000" />
		<property name="numeric" value="true" />
	</bean>

	<bean id="timingPrepareInterceptor"
		class="com.cnk.travelogix.product.common.core.interceptors.TimingPrepareInterceptor">
		<property name="keyGenerator" ref="timingCodeGenerator" />
	</bean>

	<bean id="timingPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"
		scope="tenant">
		<property name="interceptor" ref="timingPrepareInterceptor" />
		<property name="typeCode" value="Timing" />
	</bean>

	<bean id="timingCodeGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		 scope="tenant">
		<property name="key" value="timer_code" />
		<property name="digits" value="5" />
		<property name="start" value="10000" />
		<property name="numeric" value="true" />
	</bean>
	
	<bean id="combinationProductPrepareInterceptor" class="com.cnk.travelogix.product.common.core.interceptors.CombinationProductPrepareInterceptor">
	<property name="keyGenerator" ref="combinationProductCodeGenerator"/>
	<property name="categoryService" ref="categoryService"/>
	<property name="modelService" ref="modelService"/>
	</bean>
	  
	  <bean id="combinationProductPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"
		scope="tenant">
		<property name="interceptor" ref="combinationProductPrepareInterceptor" />
		<property name="typeCode" value="CombinationProduct" />
	</bean>
	
	<bean id="combinationProductCodeGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		 scope="tenant">
		<property name="key" value="combinationProduct_code" />
		<property name="digits" value="3" />
		<property name="start" value="CP100" />
		<property name="numeric" value="false" />
	</bean>
	
	<bean id="accommodationProductPrepareInterceptor"
		class="com.cnk.travelogix.product.common.core.interceptors.AccommodationProductPrepareInterceptor">
		<property name="companyProductIdService" ref="companyProductIdService" />
	</bean>
	
	<alias name="defaultAccommodationProductService" alias="companyProductIdService" />
	<bean id="defaultAccommodationProductService"
		class="com.cnk.travelogix.product.common.core.service.impl.DefaultAccommodationProductService">
		<property name="keyGenerator" ref="commonproductIdKeyGenerator" />
	</bean>

	<bean id="accommodationProductPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"
		scope="tenant">
		<property name="interceptor" ref="accommodationProductPrepareInterceptor" />
		<property name="typeCode" value="Accommodation" />
	</bean>
	
	<bean id="geoLocatorPrepareInterceptor"
		class="com.cnk.travelogix.product.common.core.interceptors.GeoLocatorPrepareInterceptor">
		<property name="geoLocationFinderService" ref="geoLocationFinderService" />
	</bean>

	<alias name="defaultGeoLocationFinderService" alias="geoLocationFinderService" />
	<bean id="defaultGeoLocationFinderService"
		class="com.cnk.travelogix.product.common.core.service.impl.DefaultGeoLocationFinderService">
		<property name="geoWebServiceWrapper" ref="geoServiceWrapper"/>
		</bean>
	
	<bean id="geoLocatorPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"
		scope="tenant">
		<property name="interceptor" ref="geoLocatorPrepareInterceptor" />
		<property name="typeCode" value="Address" />
	</bean>
	
	<bean id="commonproductIdKeyGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="commonProduct_Id" />
		<property name="digits" value="3" />
		<property name="start" value="001" />
		<property name="numeric" value="true" />
	</bean>

</beans>
