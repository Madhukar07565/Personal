<?xml version="1.0" encoding="UTF-8"?>
<!-- [y] hybris Platform Copyright (c) 2000-2015 hybris AG All rights reserved. 
	This software is the confidential and proprietary information of hybris ("Confidential 
	Information"). You shall not disclose such Confidential Information and shall 
	use it only in accordance with the terms of the license agreement you entered 
	into with hybris. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">


   <context:annotation-config />
	<bean id="baseDirectoryTravelogixCruiseCompany" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/travelogix/cruiseCompany" />
	</bean>
	
	
	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesTravelogixCruiseCompany"
		directory="#{baseDirectoryTravelogixCruiseCompany}" filename-regex="cruise_company-(\d+)\.csv"
		comparator="fileOrderComparator">
		<int:poller fixed-rate="100" />
	</file:inbound-channel-adapter>
	
	<bean id="fileOrderComparatorCruiseCompany"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.FileOrderComparator">
		<property name="prefixPriority">
			<map>
				<!-- default priority is 0 -->
				<entry key="cruise_company" value="150" />
			</map>
		</property>
	</bean>
	
	
	
	<!-- 2) move the file to processing and create header -->
	<file:outbound-gateway request-channel="batchFilesTravelogixCruiseCompany"
		reply-channel="travelogixCruiseCompanyBatchFilesProc" directory="#{baseDirectoryTravelogixCruiseCompany}/processing"
		delete-source-files="true" />

	<int:service-activator input-channel="travelogixCruiseCompanyBatchFilesProc"
		output-channel="travelogixCruiseCompanyBatchFilesHeaderInit" ref="travelogixCruiseCompanyHeaderSetupTask"
		method="execute" />

	<bean id="travelogixCruiseCompanyHeaderSetupTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="EZ-IN" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectoryTravelogixCruiseCompany" />
	</bean>
	
	<!-- 2) move the file to processing and setup header, partly site dependent -->
	<int:service-activator input-channel="travelogixCruiseCompanyBatchFilesHeaderInit"
		output-channel="travelogixCruiseCompanyBatchFilesHeader" ref="headerInitTask"
		method="execute" />
	<bean id="headerInitTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderInitTask">
		<property name="sequenceIdParser" ref="batchSequenceIdParser" />
		<property name="languageParser" ref="batchLanguageParser" />
		<property name="fallbackLanguage" value="en" />
	</bean>

	<bean id="batchSequenceIdParser"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.util.SequenceIdParser">
		<property name="parser">
			<bean class="de.hybris.platform.acceleratorservices.util.RegexParser">
				<property name="regex" value="-(\d+)\.csv" />
			</bean>
		</property>
	</bean>
	
	<!-- 3) transform csv to impex file -->
	<int:service-activator input-channel="travelogixCruiseCompanyBatchFilesHeader"
		output-channel="batchFilesTran" ref="travelogixCruiseCompanyBatchTransformerTask"
		method="execute" />

	<bean id="travelogixCruiseCompanyBatchTransformerTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.ImpexTransformerTask"
		init-method="initConvertersMap">
		<property name="fieldSeparator" value="&#59;" />
		<property name="encoding" value="UTF-8" />
		<property name="linesToSkip" value="1" />
		<property name="cleanupHelper" ref="cleanupHelper" />
	</bean>
	
	
	<!-- Common Header -->

	<bean id="cruiseCompanyDefaultHeader" class="java.lang.String">
		<constructor-arg>
			<value># ImpEx for importing data into $CATALOG$
				# ImpEx for importing data into $CATALOG$
				$productCatalog=EZ-IN
				$productCatalogName=ezeego1-IN
				$catalogVersion=catalogVersion(catalog(id),version)[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator]
				$dateformat=dd-MM-yyyy
				$approved=approvalstatus(code)[default='approved']
			</value>
		</constructor-arg>
	</bean>
	<!-- End Of Common Header -->
	
	<!-- Transformer converters mappings -->
	
	<bean id="batchCnkCruiseCompanyMasterConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="cruise_company" p:converter-ref="batchCnkCruiseCompanyMasterConverter" />
		
	<bean id="batchCnkCruiseCompanyMasterConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{cruiseCompanyDefaultHeader}
				INSERT_UPDATE CruiseCompany;$catalogVersion[unique=true];code[unique=true];commonID;name;financeControlID;notes;copiedFrom;affiliation(code);effectiveFromDate[dateformat=$dateformat];active;approvalStatus(code);reason;remarks
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'CruiseCompany'"/>
   		</bean>
  		</property>
	</bean>
		
	<bean id="batchCruiseCompanyMediaConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="cruise_company" p:converter-ref="batchCruiseCompanyMediaConverter" />

	<bean id="batchCruiseCompanyMediaConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert CNK FacilityMedia
				#{cruiseCompanyDefaultHeader}
				$media=@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
				$importFolder=file:$BASE_SOURCE_DIR$
				INSERT_UPDATE Media;code[unique=true];mime[default='image/jpeg'];$catalogVersion;folder(qualifier)[default=images];realfilename;@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator];company(CruiseCompany.code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{1};;{2};$importFolder/{2};{4}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Media'"/>
   		</bean>
  		</property>
	</bean>
	<!-- Social Networking Details Feed -->
	
	<bean id="batchCnkSocialNetworkingConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="cruise_company" p:converter-ref="batchCnkCruiseCompanySocialNetworkingConverter" />
		
	<bean id="batchCnkCruiseCompanySocialNetworkingConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{cruiseCompanyDefaultHeader}
				INSERT_UPDATE SocialNetworkingDetails;socialNetworkingID[unique=true];socialNetworkingName;company(CruiseCompany.code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'SocialNetworkingDetails'"/>
   		</bean>
  		</property>
	</bean>
	
	<!-- Email Address Feed -->
	
	<bean id="batchCnkEmailAddressConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="cruise_company" p:converter-ref="batchCnkEmailAddressConverter" />
		
	<bean id="batchCnkEmailAddressConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{cruiseCompanyDefaultHeader}
				INSERT_UPDATE EmailAddress;newsLetterRequired;webpageAddress;displayName;emailAddress[unique=true];emailAddressType(code);company(CruiseCompany.code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5};{6}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'EmailAddresses'"/>
   		</bean>
  		</property>
	</bean>	
	<bean id="batchCnkAddressConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="cruise_company" p:converter-ref="batchCnkAddressConverter" />
		
	<bean id="batchCnkAddressConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{cruiseCompanyDefaultHeader}
				INSERT_UPDATE Address;owner(CruiseCompany.code)[unique=true];streetname[unique=true];streetnumber;street3;street4;street5;postalcode;town;country(isocode);landmark;addressType(code);city(City.isocode);suburbDowntown(isocode);area;location(isocode)
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Address'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchCnkCompanyWithAddressConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="cruise_company" p:converter-ref="batchCnkAddressCompanyMapConverter" />
	
	
	<bean id="batchCnkAddressCompanyMapConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{cruiseCompanyDefaultHeader}
				UPDATE CruiseCompany;$catalogVersion[unique=true];code[unique=true];address(Address.streetname,Address.addressType(code))			
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3}:{12}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Address'"/>
   		</bean>
  		</property>
	</bean>
	
	</beans>