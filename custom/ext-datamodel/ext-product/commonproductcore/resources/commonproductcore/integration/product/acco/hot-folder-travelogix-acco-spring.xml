<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">

	<context:annotation-config />

	<bean id="baseDirectoryTravelogixAccoProduct" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/travelogix/product/acco" />
	</bean>

	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesTravelogixAccoProduct"
		directory="#{baseDirectoryTravelogixAccoProduct}" filename-regex="acco-product-detail-(\d+)\.csv"
		comparator="fileOrderComparatorAccoProduct">
		<int:poller fixed-rate="100" />
	</file:inbound-channel-adapter>

	<bean id="fileOrderComparatorAccoProduct"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.FileOrderComparator">
		<property name="prefixPriority">
			<map>
				<!-- default priority is 0 -->
				<entry key="acco-product-detail" value="150" />
			</map>
		</property>
	</bean>

	<!-- 2) move the file to processing and create header -->
	<file:outbound-gateway request-channel="batchFilesTravelogixAccoProduct"
		reply-channel="travelogixAccoProductBatchFilesProc" directory="#{baseDirectoryTravelogixAccoProduct}/processing"
		delete-source-files="true" />

	<int:service-activator input-channel="travelogixAccoProductBatchFilesProc"
		output-channel="travelogixAccoProductBatchFilesHeaderInit" ref="travelogixAccoProductHeaderSetupTask"
		method="execute" />

	<bean id="travelogixAccoProductHeaderSetupTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="EZ-IN" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectoryTravelogixAccoProduct" />
	</bean>

	<!-- 2) move the file to processing and setup header, partly site dependent -->
	<int:service-activator input-channel="travelogixAccoProductBatchFilesHeaderInit"
		output-channel="travelogixAccoProductBatchFilesHeader" ref="headerInitTask"
		method="execute" />
		
	<bean id="headerInitTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderInitTask">
		<property name="sequenceIdParser" ref="batchSequenceIdParser" />
		<property name="languageParser" ref="batchLanguageParser" />
		<property name="fallbackLanguage" value="en" />
	</bean>

	<bean id="batchSequenceIdParser"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.util.SequenceIdParser">
		<property name="parser">
			<bean class="de.hybris.platform.acceleratorservices.util.RegexParser">
				<property name="regex" value="-(\d+)\.csv" />
			</bean>
		</property>
	</bean>

	<!-- 3) transform csv to impex file -->
	<int:service-activator input-channel="travelogixAccoProductBatchFilesHeader"
		output-channel="batchFilesTran" ref="travelogixAccoProductBatchTransformerTask"
		method="execute" />

	<bean id="travelogixAccoProductBatchTransformerTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.ImpexTransformerTask"
		init-method="initConvertersMap">
		<property name="fieldSeparator" value="&#59;" />
		<property name="encoding" value="UTF-8" />
		<property name="linesToSkip" value="1" />
		<property name="cleanupHelper" ref="cleanupHelper" />
	</bean>
	
	
	<bean id="accoProductDefaultHeader" class="java.lang.String">
		<constructor-arg>
			<value># ImpEx for importing data into $CATALOG$
					 $productCatalog=EZ-IN
                $productCatalogName=ezeego1-IN
                $catalogVersion=catalogVersion(catalog(id),version)[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator]
		          $dateformat=dd-MM-yyyy
			</value>
		</constructor-arg>
	</bean>
	
	
	<bean id="batchAccoMediaPackageConverterMapping" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoMediaPackageConverter" />

	<bean id="batchAccoMediaPackageConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				$media=@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
				$importFolder=file:$BASE_SOURCE_DIR$
				INSERT_UPDATE Media;code[unique=true];$media;mime[default='image\jpg'];$catalogVersion;folder(qualifier);roomCategory(code);validFromTO[dateformat=dd-MM-yyyy hh:mm:ss];fileName(FileName.code)
		</value>
		</property>
		<property name="impexRow">
			<value>;{2};$importFolder/{2};{3};{1};;{4};{5},{6};{7}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Media'"/>
   		</bean>
  		</property>
	</bean>
	
	
		<bean id="batchAccoProductConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductConverter" />

	<bean id="batchAccoProductConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				$approved=approvalstatus(code)[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.ArticleStatusDataDecorator]
				INSERT_UPDATE Accommodation;$catalogVersion[unique=true];code[unique=true][forceWrite=true];commonProductID[unique=true];financeControlId;name;$approved;onlineDate[dateformat=$dateformat];offlineDate[dateformat=$dateformat];supercategories(name[lang=en],catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator];ratingDate[dateformat=$dateformat];totalFloors;totalRooms;checkinTime;checkoutTime;internalRemark;companyRecommended;mysteryProduct;displayName;hotelRating(code);companyRating(code);recommendedFor(code);hashTags(code);resortType(code);logo(Media.fileName(FileName.code));chain(AccommodationChain.code);brand(AccommodationBrand.code);affiliation(Affiliation.code);reason;remarks;active
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{7};{34};{5};{6};{8}:{1};{9};{10};{11};{12};{13};{14};{15};{16};{17};{18};{19};{20};{21};{22};{23};{24};{25};{26};{27};{28};{33}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Accommodation'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductAddressConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductAddreesConverter" />

	<bean id="batchAccoProductAddreesConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE Address;owner(Accommodation.code);streetname[unique=true];streetnumber[unique=true];postalcode;duplicate;town;country(isocode);street3;street4;street5;suburbDowntown;area;location;latitude;longitude;addressType;branchName;city(isocode)
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};;{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Address'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductAddressUpdateConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductAddressUpdateConverter" />
	
	<bean id="batchAccoProductAddressUpdateConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				UPDATE Accommodation;$catalogVersion[unique=true];code[unique=true];address(owner(Accommodation.code))
		</value>
		</property>
		<property name="impexRow">
			<value>;{18};{1};{1}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Address'"/>
   		</bean>
  		</property>
	</bean>
	
	
	<bean id="batchAccoProductDeactivationConfigConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductDeactivationConfigConverter" />
	
	<bean id="batchAccoProductDeactivationConfigConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE DeactivationConfig;product(code,catalogVersion(catalog(id),version))[unique=true,cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator];validityStartDate[dateformat=$dateformat];validityEndDate[dateformat=$dateformat];companyMarket(Market.uid)[unique=true];reason
		</value>
		</property>
		<property name="impexRow">
			<value>;{2}:{1};{3};{4};{5};{6}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'DeactivationConfig'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoHotelUpdateConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoHotelUpdateConverter" />

	<bean id="batchAccoHotelUpdateConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE ProductUpdate;updateType(code)[unique=true];descriptionType(code)[unique=true];description;sendToCustomer;showOnVoucher;modeOfCommunication(code)[unique=true];fromToDate[unique=true,dateformat=dd-MM-yyyy hh:mm:ss];product(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{5};{6};{7};{8},{9};{1}:{10}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Product Update'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductFacilityConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductFacilityConverter" />

	<bean id="batchAccoProductFacilityConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE Facility;accommodation(code)[unique=true];facilityCategory(code)[unique=true];facilityType(code);facilityName;description
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Facility'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductDescriptionConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductDescriptionConverter" />

	<bean id="batchAccoProductDescriptionConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE DescriptionDetails;description;fromToDate[dateformat=dd-MM-yyyy hh:mm:ss][unique=true];source[unique=true];productShortDescription(code)[unique=true]
		</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3},{4};{5};{1}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'ShortDescription'"/>
   		</bean>
  		</property>
	</bean>
	
	
	<bean id="batchAccoProductLongDescriptionConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductLongDescriptionConverter" />

	<bean id="batchAccoProductLongDescriptionConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE DescriptionDetails;description;fromToDate[dateformat=dd-MM-yyyy hh:mm:ss][unique=true];source[unique=true];productLongDescription(code)[unique=true]
		</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3},{4};{5};{1}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'LongDescription'"/>
   		</bean>
  		</property>
	</bean>
	
	
	
	<bean id="batchAccoProductContactConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductContactConverter" />

	<bean id="batchAccoProductContactConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE ContactDetails;accommodation(Accommodation.code)[unique=true];telephone;fax;websiteUrl;email
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Contact Details'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductRouteConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductRouteConverter" />

	<bean id="batchAccoProductRouteConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE Route;distanceFromProperty;approximateDuration;description;drivingDirection;validFromTO[dateformat=dd/MM/yyyy hh:mm:ss];distanceUnit(code);accommodation(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];from;nameOfPlace;modeOfTransport(code);transportType
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{5};{6},{7};{8};{1}:{13};{9};{10};{11};{12}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Route'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductLandMarkConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductLandMarkConverter" />

	<bean id="batchAccoProductLandMarkConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE PlaceDescription;placeName;distanceFromProperty;description;accommodation(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];placeOfCategory(code);distanceUnit(code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{1}:{7};{5};{6}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'LandMark'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductAccomodationConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductAccomodationConverter" />

	<bean id="batchAccoProductAccomodationConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE PlaceDescription;placeName;distanceFromProperty;description;accommodation(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];placeOfCategory(code);distanceUnit(code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{1}:{7};{5};{6}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'In and Around'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductHealthSafetyConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductHealthSafetyConverter" />

	<bean id="batchAccoProductHealthSafetyConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE HealthAndSafety;accommodation(code)[unique=true];remarks;value;lastUpdate[dateformat=$dateformat];healthAndSafetyCategory;healthAndSafetyName
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{5};{4};{6};{3};{2}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'HealthAndSafety'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductAncillaryConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductAncillaryConverter" />

	<bean id="batchAccoProductAncillaryConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				$approved=approvalstatus(code)[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.ArticleStatusDataDecorator]
			   INSERT_UPDATE Ancillary;$catalogVersion[unique=true];code[unique=true];name;$approved;onlineDate[dateformat=$dateformat];offlineDate[dateformat=$dateformat];description;ancillaryType(code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5};{6};{7};{8}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Ancillary'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductReferenceConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductReferenceConverter" />

	<bean id="batchAccoProductReferenceConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				$approved=approvalstatus(code)[default='approved']
				INSERT_UPDATE ProductReference;source(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];target(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];referenceType(code);active;preselected[default=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{2}:{1};{3}:{1};{4};{5};</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'AccommodationAncillaries'"/>
   		</bean>
  		</property>
	</bean>
	
		<bean id="batchAccoProductFamilyDetailConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductFamilyDetailConverter" />

	<bean id="batchAccoProductFamilyDetailConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE FamilyDetail;accommodation(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];familyName[unique=true];familyDescription;familyMember;age;gender(code);memberName[unique=true];familyMemberDescription
			</value>
		</property>
		<property name="impexRow">
			<value>;{2}:{1};{3};{4};{5};{6};{7};{8};{9}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'FamilyDetail'"/>
   		</bean>
  		</property>
	</bean>
	
		<bean id="batchAccoProductRoomPaxConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductRoomPaxConverter" />

	<bean id="batchAccoProductRoomPaxConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE RoomPaxOccupancy;roomId[unique=true];maxAdults;maxPaxWithExtraBed;maxCNB;maxChild;maxPax;accommodation(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];roomType(code);fromAgeForExtraBed;toAgeForExtraBed;fromAgeForCNB;toAgeForCNB;fromAgeForCIOR;toAgeForCIOR;category(code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{5};{6};{7};{1}:{16};{8};{9};{10};{11};{12};{13};{14};{15}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'RoomPaxOccupancy'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductRuleInfoConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductRuleInfoConverter" />

	<bean id="batchAccoProductRuleInfoConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE RuleInfo;description[unique=true];accommodation(code)[unique=true];ruleType(TravelogixRuleType.code)[unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{3};{1};{2}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'RuleInfo'"/>
   		</bean>
  		</property>
	</bean>
	
		<bean id="batchAccoProductRoomInfoConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductRoomInfoConverter" />

	<bean id="batchAccoProductRoomInfoConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE RoomInfo;roomId[unique=true][forceWrite=true];roomView;noOfRooms;roomName[lang=en];noOfInterconnectingRooms;description;roomSize;roomDecor;smoking;floorName;floorNumber;mysteryRoom;accommodation(code,catalogVersion(catalog(id),version))[cellDecorator=com.cnk.travelogix.product.common.core.impex.decorator.CatalogDataDecorator][unique=true];bathroomType(BathType.code);bedType(code);companyRoomCategory(code);category(code);amenityTypes(AmenityType.code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{1}:{18};{14};{15};{16};{17};{19}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'RoomInfo'"/>
   		</bean>
  		</property>
	</bean> 
	
	<bean id="batchAccoProductClassificationConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductClassificationConverter" />

	<bean id="batchAccoProductClassificationConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
					$lang=en
					$classSystemVersion=systemVersion(catalog(id[default='EZ-IN-CS']),version[default='1.0'])[unique=true]
					$classCatalogVersion=catalogversion(catalog(id[default='EZ-IN-CS']),version[default='1.0'])[unique=true,default='EZ-IN-CS:1.0']
					$class=classificationClass(ClassificationClass.code,$classCatalogVersion)[unique=true]
					$attribute=classificationAttribute(code,$classSystemVersion)[unique=true]
					$unit=unit(code,$classSystemVersion)
					$clAttrModifiers=system='EZ-IN-CS',version='1.0',translator=de.hybris.platform.catalog.jalo.classification.impex.ClassificationAttributeTranslator,lang=en
					$feature1=@CarbonFootPrint-Accommodation-GeneralInfo[$clAttrModifiers];
					$feature2=@YearRenovated-Accommodation-GeneralInfo[$clAttrModifiers];
					$feature3=@YearBuilt-Accommodation-GeneralInfo[$clAttrModifiers];
					$feature4=@AwardReceived-Accommodation-GeneralInfo[$clAttrModifiers];
				INSERT_UPDATE Accommodation;$catalogVersion[unique=true];code[unique=true];$feature1;$feature2;$feature3;$feature4
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{29};{30};{31};{32}</value>
		</property>
		
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Accommodation'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchAccoProductClassificationHomeStayConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAccoProductClassificationHomeStayConverter" />
	
	<bean id="batchAccoProductClassificationHomeStayConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
					$lang=en
					$classSystemVersion=systemVersion(catalog(id[default='EZ-IN-CS']),version[default='1.0'])[unique=true]
					$classCatalogVersion=catalogversion(catalog(id[default='EZ-IN-CS']),version[default='1.0'])[unique=true,default='EZ-IN-CS:1.0']
					$class=classificationClass(ClassificationClass.code,$classCatalogVersion)[unique=true]
					$attribute=classificationAttribute(code,$classSystemVersion)[unique=true]
					$unit=unit(code,$classSystemVersion)
					$clAttrModifiers=system='EZ-IN-CS',version='1.0',translator=de.hybris.platform.catalog.jalo.classification.impex.ClassificationAttributeTranslator,lang=en
					$feature1=@NameOfLanguage-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature2=@NameOfInterests-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature3=@Childerns-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature4=@NumberOFChilderns-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature5=@Pets-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature6=@NumberOFPets-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature7=@PetTypes-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature8=@NonSmokingHouseHold-HomeStay-HostFamilyDetails[$clAttrModifiers];
					$feature9=@CertifiedHostId-HomeStay-CertificationDetails[$clAttrModifiers];
					$feature10=@UserCertificationDescription-HomeStay-CertificationDetails[$clAttrModifiers];
					$feature11=@CriminalRecordCertificationDescription-HomeStay-CertificationDetails[$clAttrModifiers];
					$feature12=@Neighbourhood Description-HomeStay-LocationDetails[$clAttrModifiers];
					$feature13=@DistanceFromCenter-HomeStay-LocationDetails[$clAttrModifiers];
					$feature14=@DistanceToPublicTransportation-HomeStay-LocationDetails[$clAttrModifiers];
				INSERT_UPDATE Accommodation;$catalogVersion[unique=true];code[unique=true];$feature1;$feature2;$feature3;$feature4;$feature5;$feature6;$feature7;$feature8;$feature9;$feature10;$feature11;$feature12;$feature13;$feature14
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17};{18};{19};{20};{21}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Accommodation  HomeStay'"/>
   		</bean>
  		</property>
	</bean>
	
	<bean id="batchStaffInformationConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchStaffInformationConverter" />

	<bean id="batchStaffInformationConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert StaffInformation
				#{accoProductDefaultHeader}
				INSERT_UPDATE StaffInformation;uid[unique=true][forceWrite=true];title(Title.code);firstName;middleName;lastName;department(Department.code);designation;role;responsibilities;gender(code);birthDate[dateformat=$dateformat];anniversaryDate[dateformat=$dateformat];internalText;timeZone(TimeZone.value);media(code);accommodation(code);availabilityTimeFrom(key(code),value);availabilityTimeTo(key(code),value)
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{1};{17};{18}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'StaffInformation'"/>
   		</bean>
   	</property>
	</bean>
	
	<bean id="batchContactNumberInfoConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchContactNumberInfoConverter" />

	<bean id="batchContactNumberInfoConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Acco Product
				#{accoProductDefaultHeader}
				INSERT_UPDATE ContactNumberInfo;contactType(code);medium(code);contactNumber[unique=true];staffInformation(uid)[unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'ContactNumberInfo'"/>
   		</bean>
   	</property>
	</bean>
	
	<bean id="batchLanguageSkillInfoConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchLanguageSkillInfoConverter" />

	<bean id="batchLanguageSkillInfoConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert LanguageSkillInfo
				#{accoProductDefaultHeader}
				INSERT_UPDATE LanguageSkillInfo;language(Language.isocode)[unique=true];read;write;speak;staffInformation(uid)[unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'LanguageSkillInfo'"/>
   		</bean>
   	</property>
	</bean>
	
	<bean id="batchEContactInfoConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchEContactInfoConverter" />

	<bean id="batchEContactInfoConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert EContactInfo
				#{accoProductDefaultHeader}
				INSERT_UPDATE EContactInfo;emailType(code)[unique=true];emailAddress;website;newsletterRequired;staffInformation(uid)[unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'EContactInfo'"/>
   		</bean>
   	</property>
	</bean>
	
	<bean id="batchSocialContactInfoConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchSocialContactInfoConverter" />

	<bean id="batchSocialContactInfoConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert SocialContactInfo
				#{accoProductDefaultHeader}
				INSERT_UPDATE SocialContactInfo;socialNetwork[unique=true];idOrLoginOrHandleOrAddress[unique=true];staffInformation(uid)[unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'SocialContactInfo'"/>
   		</bean>
   	</property>
	</bean>
	
	<bean id="batchStaffMediaConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchStaffMediaConverter" />

	<bean id="batchStaffMediaConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Address
				#{accoProductDefaultHeader}
				$media=@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
				$importFolder=file:$BASE_SOURCE_DIR$
				INSERT_UPDATE Media;code[unique=true];$media;mime[default='image\jpg'];$catalogVersion;folder(qualifier);roomCategory(code);validFromTO[dateformat=dd-MM-yyyy hh:mm:ss]
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};$importFolder/{2};{3};{1};;{4};{5},{6}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'StaffInfoMedia'"/>
   		</bean>
   	</property>
	</bean>
	
	<bean id="batchAddressConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchAddressConverter" />

	<bean id="batchAddressConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert Address
				#{accoProductDefaultHeader}
				INSERT_UPDATE Address;owner(StaffInformation.uid)[unique=true];addressType(code)[unique=true];streetname[unique=true];street3;street4;street5;town;postalcode;country(isocode);region(isocode);city(isocode);area;location;landmark
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'Staff Address'"/>
   		</bean>
   	</property>
	</bean>
	
	<bean id="batchStaffInformationAddressConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="acco-product-detail" p:converter-ref="batchStaffInformationAddressConverter" />

	<bean id="batchStaffInformationAddressConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				# Insert StaffInformation
				#{accoProductDefaultHeader}
				UPDATE StaffInformation;uid[unique=true];addresses(owner(StaffInformation.uid))
			</value>
		</property>
		<property name="impexRow">
			<value>;{2};{2}</value>
		</property>
		<property name="rowFilter">
   		<bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
    	<property name="expression" value="row[0] == 'StaffInformation'"/>
   		</bean>
   	</property>
	</bean>
</beans>	